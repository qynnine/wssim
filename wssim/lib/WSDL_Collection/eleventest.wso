<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://webservices.DataAccess.Net/ElevenTest" name="ElevenTest" targetNamespace="http://webservices.DataAccess.Net/ElevenTest">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://webservices.DataAccess.Net/ElevenTest">
      <xs:element name="IsAllNumbers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsAllNumbersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="IsAllNumbersResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StripToNumeric">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StripToNumericResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="StripToNumericResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BankAccountNumbersTest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sAccountNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BankAccountNumbersTestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BankAccountNumbersTestResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BSNTest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sBSN" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BSNTestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="BSNTestResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="IsAllNumbersSoapRequest">
    <part name="parameters" element="tns:IsAllNumbers"/>
  </message>
  <message name="IsAllNumbersSoapResponse">
    <part name="parameters" element="tns:IsAllNumbersResponse"/>
  </message>
  <message name="StripToNumericSoapRequest">
    <part name="parameters" element="tns:StripToNumeric"/>
  </message>
  <message name="StripToNumericSoapResponse">
    <part name="parameters" element="tns:StripToNumericResponse"/>
  </message>
  <message name="BankAccountNumbersTestSoapRequest">
    <part name="parameters" element="tns:BankAccountNumbersTest"/>
  </message>
  <message name="BankAccountNumbersTestSoapResponse">
    <part name="parameters" element="tns:BankAccountNumbersTestResponse"/>
  </message>
  <message name="BSNTestSoapRequest">
    <part name="parameters" element="tns:BSNTest"/>
  </message>
  <message name="BSNTestSoapResponse">
    <part name="parameters" element="tns:BSNTestResponse"/>
  </message>
  <portType name="ElevenTestSoapType">
    <operation name="IsAllNumbers">
      <documentation>This function checks if a passed 'number' contains all numbers, so if every character is in the the '0123456789' range.</documentation>
      <input message="tns:IsAllNumbersSoapRequest"/>
      <output message="tns:IsAllNumbersSoapResponse"/>
    </operation>
    <operation name="StripToNumeric">
      <documentation>This function strips out all characters from the input string that are not numeric.</documentation>
      <input message="tns:StripToNumericSoapRequest"/>
      <output message="tns:StripToNumericSoapResponse"/>
    </operation>
    <operation name="BankAccountNumbersTest">
      <documentation>This function assumes you pass a Bank Account Number (strips out all non numeric characters) and checks the number with the 'ElfProef'. If it is succesful the result will be 1 (=True) else it returns 0 (=False).</documentation>
      <input message="tns:BankAccountNumbersTestSoapRequest"/>
      <output message="tns:BankAccountNumbersTestSoapResponse"/>
    </operation>
    <operation name="BSNTest">
      <documentation>This function assumes you pass a 'Burger Service Number' (it strips out all non numeric characters) and checks the number with the 'ElfProef'. If it is succesful the result will be 1 (=True) else it returns 0 (=False).</documentation>
      <input message="tns:BSNTestSoapRequest"/>
      <output message="tns:BSNTestSoapResponse"/>
    </operation>
  </portType>
  <binding name="ElevenTestSoapBinding" type="tns:ElevenTestSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="IsAllNumbers">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StripToNumeric">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="BankAccountNumbersTest">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="BSNTest">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ElevenTest">
    <documentation>Visual DataFlex Web Service for Checksums based on the 'ElfProef'. The 'ElfProef' is a CRC technique determine if a number is a valid number where the sum of the passed digits divided by 11 must be a  integer. Security Note: No information about the passed numbers will be stored, we only count the number of times anyone used one of the functions of this webservice for statistic reports.</documentation>
    <port name="ElevenTestSoap" binding="tns:ElevenTestSoapBinding">
      <soap:address location="http://webservices.daehosting.com/services/eleventest.wso"/>
    </port>
  </service>
</definitions>
